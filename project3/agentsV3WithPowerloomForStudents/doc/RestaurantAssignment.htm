<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./RestaurantAssignment_files/filelist.xml">
<link rel=Edit-Time-Data href="./RestaurantAssignment_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Restaurant/Powerloom Assignment</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>dwilczyn</o:Author>
  <o:LastAuthor>dwilczyn</o:LastAuthor>
  <o:Revision>10</o:Revision>
  <o:TotalTime>3949</o:TotalTime>
  <o:LastPrinted>2006-10-30T14:29:00Z</o:LastPrinted>
  <o:Created>2006-11-01T19:12:00Z</o:Created>
  <o:LastSaved>2006-11-01T22:17:00Z</o:LastSaved>
  <o:Pages>5</o:Pages>
  <o:Words>1448</o:Words>
  <o:Characters>8255</o:Characters>
  <o:Company>usc</o:Company>
  <o:Lines>68</o:Lines>
  <o:Paragraphs>16</o:Paragraphs>
  <o:CharactersWithSpaces>10137</o:CharactersWithSpaces>
  <o:Version>9.6926</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>BestFit</w:Zoom>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:646786887;
	mso-list-type:hybrid;
	mso-list-template-ids:-450068862 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l1
	{mso-list-id:657684399;
	mso-list-type:hybrid;
	mso-list-template-ids:-1945202458 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l2
	{mso-list-id:873735183;
	mso-list-type:hybrid;
	mso-list-template-ids:1049365370 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l3
	{mso-list-id:955336297;
	mso-list-type:hybrid;
	mso-list-template-ids:-57535730 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l3:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l3:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
@list l3:level3
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:right;
	margin-left:1.25in;
	text-indent:-9.0pt;}
@list l4
	{mso-list-id:992683647;
	mso-list-type:hybrid;
	mso-list-template-ids:529304704 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l5
	{mso-list-id:1567182566;
	mso-list-type:hybrid;
	mso-list-template-ids:1217790714 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l5:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.75in;
	mso-level-number-position:left;
	margin-left:1.75in;
	text-indent:-.25in;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l6
	{mso-list-id:1572737728;
	mso-list-type:hybrid;
	mso-list-template-ids:1049365370 67698703 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l6:level1
	{mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;}
@list l7
	{mso-list-id:1707170291;
	mso-list-type:hybrid;
	mso-list-template-ids:170316118 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l7:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l8
	{mso-list-id:1936403944;
	mso-list-type:hybrid;
	mso-list-template-ids:-1159046258 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l8:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l9
	{mso-list-id:2037072631;
	mso-list-type:hybrid;
	mso-list-template-ids:1948139736 67698703 67698713 67698703 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l9:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l9:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
@list l9:level3
	{mso-level-tab-stop:99.0pt;
	mso-level-number-position:left;
	margin-left:99.0pt;
	text-indent:-.25in;}
@list l10
	{mso-list-id:2119521245;
	mso-list-type:hybrid;
	mso-list-template-ids:389849094 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l10:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l10:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
@list l11
	{mso-list-id:2123916419;
	mso-list-type:hybrid;
	mso-list-template-ids:1049365370 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l11:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1028"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<h2><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></h2>

<h1 align=center style='text-align:center'>Project 3, Part 3– Powerloom and
Agents</h1>

<p class=MsoNormal>Please download <a
href="agentsV3WithPowerloomForStudents.zip">agentsV3WithPowerloomForStudents.zip</a>
and unzip it in the usual way to the directory of your choice. Here is what you
will find:</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l9 level1 lfo2;
tab-stops:list .25in'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>The same restaurant application that you are familiar with but
with two changes:</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>A* is already integrate into the WaiterAgent. You may use mine
or substitute your own solution.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Powerloom is integrated into the code. Much more about that
later.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l9 level1 lfo2;
tab-stops:list .25in'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the doc directory you will find:</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>restaurant.plm – This is the powerloom file, written by Jon
Stinzel, that corresponds to my circles and arrows picture (shown later in this
document). You need to become intimately familiar with this file.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>restcmd.plm – This is a powerloom file that has the queries to
test restaurant.plm. Jon also wrote it.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>c.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>PowerLoomExample.java – This file shows how to write Java code
to interface to Powerloom. Dr. Tom Russ supplied it. I used it extensively to
implement my agent code.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>d.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>DesignDocV3.0.doc – This is the original design document for
the original V3.0 agents. Denise Nemenz wrote it. She also wrote the original v3.0
agents.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l9 level2 lfo2;
tab-stops:list .75in'><![if !supportLists]>e.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>RestaurantAssignment.htm – This document.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Here’s how Powerloom has been integrated into the restaurant
code:</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l10 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In RestaurantGui.java</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the main routine -
PowerloomHelper.doPowerLoomRestaurantStartup();<br>
This initializes powerloom and reads in restaurant.plm.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the constructor, powerloom instances for our restaurant are
created. There are two gettr’s: <br>
String getrestaurantInstance()<span style="mso-spacerun: yes">  </span>and<span
style="mso-spacerun: yes">  </span>String getneighborhoodInstance(). <br>
You will notice that all powerloom instances are of type String.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l10 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In Host.java</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the constructor, the host is instantiated in Powerloom and
asserted to be an employee of our restaurant.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Every agent has a variable to hold its instance: String loomInstance</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l10 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In PowerloomHelper.java</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>I have put several helper functions there. When you explore
Customer.java you will see how to use them.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>When PowerloomHelper.instantiate(loomInstance, Agent) <span
style="mso-spacerun: yes"> </span>is called, an entry is added to the static hashmap
loomMap. This is how we associate powerloom instances with our Java pointers
for the agent. Look in CustomerAgent.java to see how he gets the HostAgent
using this map.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l10 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>CustomerAgent.java – I have completely converted this agent to
work with Powerloom.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>When this constructor is called by the gui (after you selected
Create Customer on the gui), we look him up in powerloom. Two things can happen:<o:p></o:p></p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l5 level1 lfo5;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The name of the customer is one we already know from restaurant.plm.
In that case, we simply set loomInstance to it.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l5 level1 lfo5;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>If we don't find the customer in restaurant.plm, then
we (1) create new a instance for him, (2) assert he has a home in our restaurant's
neighborhood. We don't know anything about his home, so the go-to-restaurant
rule will fire and he'll be seated.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>The variables it uses to store information it and reason with
have been replaced by loom instances:</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l4 level1 lfo6;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>private String state<span style="mso-spacerun: yes"> 
</span>replaces AgentState state <o:p></o:p></p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l4 level1 lfo6;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>AgentState used to be an enum and is now static
strings.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l4 level1 lfo6;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>boolean isHungry is now maintained by powerloom</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>c.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the message reception code, assertions are made instead of setting
Java variables.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>d.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the schedule, decisions are made by making queries to
powerloom.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l10 level2 lfo4;
tab-stops:list .75in'><![if !supportLists]>e.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>In the actions, assertions and retractions are made to
represent what is going on.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>IT IS MY INTENTION THAT ALL THE POWERLOOM BEHAVIOR YOU NEED
TO DO THIS ASSIGNMENT CAN BE FOUND SOMEWHERE IN CustomerAgent.java. We’ll see;
that’s what the discussion board is for.</p>

<h2>Your Assignment</h2>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo7;
tab-stops:list .25in'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Add code to CustomerAgent.java so that he’ll eat at home if
there is food there and he is hungry. I have annotated its scheduler to show
you where to put the code. Do this first to become familiar with how the code
works. This addition will have no role in the animation. Only the print output
will tell us it worked.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo7;
tab-stops:list .25in'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Change the Waiter, Cook, and Host in the same way I changed
CustomerAgent.java. In other words all of their data storage and reasoning
should be done with powerloom. Almost all the concepts, relations, and rules
you need are already in restaurant.plm. You may have to add some.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo7;
tab-stops:list .25in'><![if !supportLists]>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>HostAgent.java</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Each of the following is to be replaced by using powerloom to
store the information:</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l0 level1 lfo8;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>List&lt;CustomerAgent&gt; waitList<span
style="mso-spacerun: yes">  </span>- This is where entering customers was
stored.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l0 level1 lfo8;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>List&lt;MyWaiter&gt; waiters<span style="mso-spacerun:
yes">  </span>- This is where the waiters are stored.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l0 level1 lfo8;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Table tables[]<span style="mso-spacerun: yes">  
</span><span style="mso-spacerun: yes"> </span>- This is where the Host keeps
his table assignments.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l0 level1 lfo8;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>int nextWaiter<span style="mso-spacerun: yes"> 
</span>- This is the hack the code uses to rotate among the waiters. We’ll try
to figure out a good way to do this with powerloom on the discussion board.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>The classes MyWaiter and Table should be commented out. You
shouldn’t need them.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo7;
tab-stops:list .25in'><![if !supportLists]>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>WaiterAgent.java – This is the most complicated Agent. You
will have to add stuff to restaurant.plm; when you do this, test it out in Powerloom
first.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Each of the following is to be replaced by using powerloom to
store the information.</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l8 level1 lfo9;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The booleans: working, onBreak, and startedBreak. [Don’t
worry at first about the on break protocol and the onBreak, and startedBreak
booleans. Make sure your waiters are “working”. You can do the on break stuff
for extra credit.]</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l7 level1 lfo10;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>enum CustomerState. Look how CustomerState is handled
in restaurant.plm and CustomerAgent.java. Notice that in this agent CustomerState
is how the customer is viewed by the waiter. So it needs a different name in restaurant.plm,
something like WaitersViewOfCustomer. </p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l1 level1 lfo11;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>List&lt;MyCustomer&gt; customers – This is where
customers who assigned by the host are stored. Use the CustomerAssignment
concept in restaurant.plm.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>The MyCustomer class should be commented out.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>c.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Don’t touch anything that has to do with the animation.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo7;
tab-stops:list .25in'><![if !supportLists]>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>CookAgent.java</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>a.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Each of the following is to be replaced by using powerloom to
store the information:</p>

<p class=MsoNormal style='margin-left:1.25in;text-indent:-.25in;mso-list:l2 level1 lfo12;
tab-stops:list 1.25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>ArrayList&lt;Order&gt; orders – This is where the cook
stores his orders. Use the FoodOrder concept in restaurant.plm.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>b.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>The Order class should be commented out.</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l3 level2 lfo7;
tab-stops:list .75in'><![if !supportLists]>c.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Don’t touch anything that has to do with the animation.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The idea is that the restaurant should work exactly the same
as it did before powerloom, except now its reasoning and storage are done by
powerloom.</p>

<h2>Rules for the Restaurant</h2>

<p class=MsoNormal>One of the main reasons for using powerloom is so that I
could replace code like this (found in the Host.java scheduler)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-indent:.5in'>if(!waitList.isEmpty() &amp;&amp;
!waiters.isEmpty()){<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>synchronized(waiters){<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>//Finds
the next waiter that is working<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>while(!waiters.get(nextWaiter).working){<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">    </span>nextWaiter =
(nextWaiter+1)%waiters.size();<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>}<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>print(&quot;picking waiter
number:&quot;+nextWaiter);<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>//Then runs through the tables and finds
the first unoccupied <o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>//table and tells the waiter to sit the
first customer at that table<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">   </span><span style="mso-spacerun:
yes"> </span>for(int i=0; i &lt; nTables; i++){<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>if(!tables[i].occupied){<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">    </span>synchronized(waitList){<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span>tellWaiterToSitCustomerAtTable(waiters.get(nextWaiter),<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
style="mso-spacerun: yes">    </span>waitList.get(0), i);<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">    </span>return true;<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>}<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>}</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>With one retrieval that says something like this pseudocode:</p>

<p class=MsoNormal>if (thereExists (?customer ?waiter ?table) such that</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>(and<span
style='mso-tab-count:1'>     </span>(WaitingCustomer ?customer)</p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>(WorkingWaiter
?waiter)</p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span>(EmptyTable
?table))</p>

<p class=MsoNormal>then call the action tellWaiterToSitCustomerAtTable(?waiter,
?customer, ?table)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>It won’t be exactly that easy, but you should get the idea.
All that searching code currently in the agent is to be replaced by powerloom
retrievals.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&ne already
encoded many of the rules in restaurant.plm. For example:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defrelation
restaurantNearby ((?p person) (?r restaurant))<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (exists
(?h ?l)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">               </span>(AND
(person ?p) <o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(lives ?p ?h)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(home ?h)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(hasLocation ?h ?l)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(neighborhood ?l)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(restaurant ?r)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(hasLocation ?r ?l))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>This relation appeared in the CustomerAgent scheduling
rules.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>(defrelation atHome ((?p person))<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (exists
(?h) <o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">               </span>(AND
(home ?h)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(isAt ?p ?h))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defconcept
foodAtHome ((?h home))<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (exists
(?k ?r ?f) <o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">               </span>(AND
(hasArea ?h ?k)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(kitchen ?k)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">   </span><span
style="mso-spacerun: yes">                 </span>(hasAppliance ?k ?r)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(hasFood ?r ?f))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defrelation
eatAtHome ((?p person))<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (exists
(?h) <o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">               </span>(AND
(hungry ?p)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(lives ?p ?h)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(atHome ?p)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">                   
</span>(foodAtHome ?h))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defconcept
waitingCustomer (?c)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>:&lt;=&gt; (AND
(customer ?c)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span><span
style="mso-spacerun: yes">         </span>(waiting ?c)))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defconcept
workingWaiter (?w)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>:&lt;=&gt; (AND
(waiter ?w)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">           </span>(working
?w)))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>(defconcept occupiedTable (?t)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (AND
(mesa ?t)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">            </span>(exists
(?c) (occupiedBy ?t ?c))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defconcept
occupiedTable (?t)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">  </span>:&lt;=&gt; (AND
(mesa ?t)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">            </span>(exists
(?c) (occupiedBy ?t ?c))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The word Table is reserved by Powerloom, so Jon had to pick
something else. A table in Spanish is mesa. You can change it to anything you
want.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>(defrelation client
(?x ?c)<o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span>:&lt;= (exists
(?a)(AND (employee ?x)<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">  </span>(hasAssignment ?x ?a) <o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">  </span>(assignment ?a)<o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style="mso-spacerun: yes">  </span>(identifies ?a ?c))))</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>It certainly wouldn’t surprise me if you needed more rules.
The discussion board is the place to discuss this.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In addition, restaurant.pl contains many instances of people
and restaurants. In particular:</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo14;
tab-stops:list .25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Joe and Jane live in the same neighborhood as our
restaurant.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo14;
tab-stops:list .25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Steve lives in a different neighborhood, but has food
in his refrigerator. So when you finish the first part of this assignment,
Steve should eat at home once he is made hungry.</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo14;
tab-stops:list .25in'><![if !supportLists]><span style='font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Jim lives in a different neighborhood, but does not have
food in his refrigerator. When you make him hungry, no rule should fire.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>So, when you run the restaurant, if you create customers
named Joe or Jane, they should appear normally. If you create Steve, he should
eat at home. If you create Jim, nothing will happen; his scheduler will not
find anything to do.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Of course, you can create more instances.</p>

<span style='font-size:12.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>The Circles and Arrows diagrams follow. It should conform to
what you see in restaurant.plm. Please post discrepancies that you find. </p>

<p class=MsoNormal><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1030" type="#_x0000_t75" style='width:523.5pt;
 height:9in'>
 <v:imagedata src="./RestaurantAssignment_files/image001.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=698 height=864
src="./RestaurantAssignment_files/image002.gif" v:shapes="_x0000_i1030"><![endif]><!--[if gte vml 1]><v:shape
 id="_x0000_i1026" type="#_x0000_t75" style='width:485.25pt;height:443.25pt'>
 <v:imagedata src="./RestaurantAssignment_files/image003.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=647 height=591
src="./RestaurantAssignment_files/image004.gif" v:shapes="_x0000_i1026"><![endif]></p>

</div>

</body>

</html>
